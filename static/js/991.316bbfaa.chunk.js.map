{"version":3,"file":"static/js/991.316bbfaa.chunk.js","mappings":"2NAIaA,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,EAA4BA,EAAQA,QAA5BC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MACVC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,GAAvBF,QAqCR,OACE,2BACE,uBAAIF,KACJ,mBAAQK,QAAS,kBAtCG,SAAAN,GACtBG,GAAQ,SAAAI,GACN,IAAMC,EAAcD,EAASE,KAAI,SAAAC,GAC/B,OAAIA,EAAKC,SAAW,EACXD,EAELA,EAAKE,YAAcZ,GACd,kBACFU,GADL,IAEEC,SAAUD,EAAKC,SAAW,IAGvBD,CACR,IAED,OADAG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,IACrCA,CACR,GACF,CAqB0BS,CAAgBjB,EAAtB,EAAjB,gBACA,0BAAOD,EAAQY,YACf,mBAAQL,QAAS,kBArBG,SAAAN,GACtBG,GAAQ,SAAAI,GACN,IAAMC,EAAcD,EAASE,KAAI,SAAAC,GAC/B,OAAIA,EAAKE,YAAcZ,GACd,kBACFU,GADL,IAEEC,SAAUD,EAAKC,SAAW,IAGvBD,CACR,IAED,OADAG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,IACrCA,CACR,GACF,CAO0BU,CAAgBlB,EAAtB,EAAjB,gBACA,2BAAQE,EAAQH,EAAQY,UAAUQ,QAAQ,OAG/C,ECpDYC,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,kBAAMC,SAAUD,EAAhB,WACE,kBAAOE,QAAQ,OAAf,oBACA,kBAAOC,KAAK,OAAOxB,GAAG,OAAOC,KAAK,UAElC,kBAAOsB,QAAQ,QAAf,qBACA,kBAAOC,KAAK,QAAQxB,GAAG,QAAQC,KAAK,WAEpC,kBAAOsB,QAAQ,UAAf,uBACA,kBAAOC,KAAK,OAAOxB,GAAG,UAAUC,KAAK,aAErC,kBAAOsB,QAAQ,cAAf,4BACA,kBAAOC,KAAK,MAAMxB,GAAG,cAAcC,KAAK,iBAExC,mBAAQuB,KAAK,SAAb,sBAGL,ECZYC,EAAW,WACtB,OAAyCrB,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CqB,EAAR,EAAQA,KAAMvB,EAAd,EAAcA,QAASwB,EAAvB,EAAuBA,cAQvBC,QAAQC,IAAIH,GAwBZ,OACE,iCACE,SAACN,EAAD,CAAWC,aAzBM,SAAAS,GACnBA,EAAMC,iBAEN,IAAMC,EAAQF,EAAMG,OAAOD,MAAME,MAC3BC,EAAcL,EAAMG,OAAOE,YAAYD,MACvCE,EAAUN,EAAMG,OAAOG,QAAQF,MAE/BG,EAAO,CACXC,KAAMZ,EAAK,GAAGa,OACdC,SAAUd,EACVM,MAAAA,EACAG,YAAAA,EACAC,QAAAA,GAGFR,QAAQC,IAAIQ,GACZP,EAAMG,OAAOQ,QACbtC,EAAQ,IACRwB,EAAc,IACdd,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,KAC5CH,aAAa6B,OACd,KAKG,wBACmB,IAAhBhB,EAAKiB,QACJjB,EAAKjB,KAAI,SAAAmC,GAAE,OAAI,SAAC9C,EAAD,CAA6BC,QAAS6C,GAAvBA,EAAGhC,UAAtB,OAEf,yCAtCkB,WACpB,IAAIiC,EAAa,EAIjB,OAHAnB,EAAKoB,SAAQ,SAAApC,GACXmC,GAAcnC,EAAKX,QAAQG,MAAQQ,EAAKC,QACzC,IACMkC,EAAW1B,QAAQ,EAC3B,CAgCoB4B,QAGtB,ECxCD,EAPa,WACX,OACE,+BACE,SAACtB,EAAD,KAGL,C","sources":["components/CartList/CartItem.jsx","components/OrderForm/OrderForm.jsx","components/CartList/CartList.jsx","pages/Cart.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MyContext } from 'components/App';\n\nexport const CartItem = ({ product }) => {\n  const { id, name, price } = product.product;\n  const { setCart } = useContext(MyContext);\n\n  const handleDecrement = id => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.map(item => {\n        if (item.quantity < 1) {\n          return item;\n        }\n        if (item.productId === id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1,\n          };\n        }\n        return item;\n      });\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  const handleIncrement = id => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.map(item => {\n        if (item.productId === id) {\n          return {\n            ...item,\n            quantity: item.quantity + 1,\n          };\n        }\n        return item;\n      });\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  return (\n    <li>\n      <p>{name}</p>\n      <button onClick={() => handleDecrement(id)}>-</button>\n      <span>{product.quantity}</span>\n      <button onClick={() => handleIncrement(id)}>+</button>\n      <span>{(price * product.quantity).toFixed(2)}</span>\n    </li>\n  );\n};\n\nCartItem.propTypes = {\n  product: PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }).isRequired,\n    quantity: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","export const OrderForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" />\n\n      <label htmlFor=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" name=\"email\" />\n\n      <label htmlFor=\"address\">Address:</label>\n      <input type=\"text\" id=\"address\" name=\"address\" />\n\n      <label htmlFor=\"phoneNumber\">Phone Number:</label>\n      <input type=\"tel\" id=\"phoneNumber\" name=\"phoneNumber\" />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n","import { MyContext } from 'components/App';\n\nimport { useContext } from 'react';\nimport { CartItem } from './CartItem';\nimport { OrderForm } from 'components/OrderForm/OrderForm';\n\nexport const CartList = () => {\n  const { cart, setCart, setActiveShop } = useContext(MyContext);\n  const getTotalPrice = () => {\n    let totalPrice = 0;\n    cart.forEach(item => {\n      totalPrice += item.product.price * item.quantity;\n    });\n    return totalPrice.toFixed(2);\n  };\n  console.log(cart);\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const email = event.target.email.value;\n    const phoneNumber = event.target.phoneNumber.value;\n    const address = event.target.address.value;\n\n    const body = {\n      shop: cart[0].shopId,\n      products: cart,\n      email,\n      phoneNumber,\n      address,\n    };\n\n    console.log(body);\n    event.target.reset();\n    setCart([]);\n    setActiveShop('');\n    localStorage.setItem('cart', JSON.stringify([]));\n    localStorage.clear();\n  };\n\n  return (\n    <>\n      <OrderForm handleSubmit={handleSubmit} />\n      <ul>\n        {cart.length !== 0 &&\n          cart.map(el => <CartItem key={el.productId} product={el} />)}\n      </ul>\n      <p>Total Price: {getTotalPrice()}</p>\n    </>\n  );\n};\n","import { CartList } from 'components/CartList/CartList';\n\nconst Cart = () => {\n  return (\n    <>\n      <CartList />\n    </>\n  );\n};\nexport default Cart;\n"],"names":["CartItem","product","id","name","price","setCart","useContext","MyContext","onClick","prevCart","updatedCart","map","item","quantity","productId","localStorage","setItem","JSON","stringify","handleDecrement","handleIncrement","toFixed","OrderForm","handleSubmit","onSubmit","htmlFor","type","CartList","cart","setActiveShop","console","log","event","preventDefault","email","target","value","phoneNumber","address","body","shop","shopId","products","reset","clear","length","el","totalPrice","forEach","getTotalPrice"],"sourceRoot":""}