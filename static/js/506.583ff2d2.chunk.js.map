{"version":3,"file":"static/js/506.583ff2d2.chunk.js","mappings":"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","sources":["components/CartList/CartList.Sstyled.jsx","components/CartList/CartItem.jsx","components/OrderForm/OrderForm.styled.jsx","components/OrderForm/OrderForm.jsx","components/CartList/CartList.jsx","pages/Cart.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CartListContainerStyled = styled.ul`\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const CartItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 10px;\n  background-color: #f7f7f7;\n  border-radius: 5px;\n`;\n\nexport const CartItemNameStyled = styled.p`\n  font-weight: bold;\n  margin-right: 10px;\n`;\n\nexport const CartItemButtonStyled = styled.button`\n  margin-right: 10px;\n  padding: 5px 10px;\n  background-color: #4fa94d;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const CartItemQuantityStyled = styled.span`\n  margin-right: 10px;\n`;\n\nexport const CartItemTotalPriceStyled = styled.span`\n  font-weight: bold;\n`;\n\nexport const TotalPriceContainerStyled = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-top: 10px;\n`;\n\nexport const TotalPriceLabelStyled = styled.span`\n  margin-right: 10px;\n  font-weight: bold;\n`;\n\nexport const TotalPriceValueStyled = styled.span`\n  font-weight: bold;\n  color: #4fa94d;\n`;\n\nexport const ClearCartStyled = styled.button`\n  margin-top: 20px;\n  background-color: blue;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  float: right;\n`;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MyContext } from 'components/App';\nimport {\n  CartItemStyled,\n  CartItemNameStyled,\n  CartItemButtonStyled,\n  CartItemQuantityStyled,\n  CartItemTotalPriceStyled,\n} from './CartList.Sstyled';\n\nexport const CartItem = ({ product }) => {\n  const { id, name, price } = product.product;\n  const { setCart } = useContext(MyContext);\n\n  const handleDecrement = id => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.map(item => {\n        if (item.quantity < 1) {\n          return item;\n        }\n        if (item.productId === id) {\n          return {\n            ...item,\n            quantity: item.quantity - 1,\n          };\n        }\n        return item;\n      });\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  const handleIncrement = id => {\n    setCart(prevCart => {\n      const updatedCart = prevCart.map(item => {\n        if (item.productId === id) {\n          return {\n            ...item,\n            quantity: item.quantity + 1,\n          };\n        }\n        return item;\n      });\n      localStorage.setItem('cart', JSON.stringify(updatedCart));\n      return updatedCart;\n    });\n  };\n\n  return (\n    <CartItemStyled>\n      <CartItemNameStyled>{name}</CartItemNameStyled>\n      <CartItemButtonStyled type=\"button\" onClick={() => handleDecrement(id)}>\n        -\n      </CartItemButtonStyled>\n      <CartItemQuantityStyled>{product.quantity}</CartItemQuantityStyled>\n      <CartItemButtonStyled type=\"button\" onClick={() => handleIncrement(id)}>\n        +\n      </CartItemButtonStyled>\n      <CartItemTotalPriceStyled>\n        {(price * product.quantity).toFixed(2)}\n      </CartItemTotalPriceStyled>\n    </CartItemStyled>\n  );\n};\n\nCartItem.propTypes = {\n  product: PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    }).isRequired,\n    quantity: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FormContainerStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nexport const FormLabelStyled = styled.label`\n  font-weight: bold;\n`;\n\nexport const FormInputStyled = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n\nexport const FormButtonStyled = styled.button`\n  padding: 10px;\n  background-color: ${props => (props.disabled ? '#ccc' : '#4fa94d')};\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n`;\n\nexport const FormErrorMessageStyled = styled.div`\n  color: red;\n`;\n","import { MyContext } from 'components/App';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContainerStyled,\n  FormLabelStyled,\n  FormInputStyled,\n  FormButtonStyled,\n} from './OrderForm.styled';\n\nexport const OrderForm = ({ handleSubmit }) => {\n  const { activeShop } = useContext(MyContext);\n\n  return (\n    <FormContainerStyled onSubmit={handleSubmit}>\n      <FormLabelStyled htmlFor=\"name\">Name:</FormLabelStyled>\n      <FormInputStyled\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        pattern=\"[a-zA-Z\\s\\p{L}]*\"\n        required\n      />\n\n      <FormLabelStyled htmlFor=\"email\">Email:</FormLabelStyled>\n      <FormInputStyled type=\"email\" id=\"email\" name=\"email\" required />\n\n      <FormLabelStyled htmlFor=\"address\">Address:</FormLabelStyled>\n      <FormInputStyled type=\"text\" id=\"address\" name=\"address\" required />\n\n      <FormLabelStyled htmlFor=\"phoneNumber\">Phone:</FormLabelStyled>\n      <FormInputStyled\n        type=\"tel\"\n        id=\"phoneNumber\"\n        name=\"phoneNumber\"\n        required\n      />\n\n      <FormButtonStyled disabled={activeShop === ''} type=\"submit\">\n        Submit\n      </FormButtonStyled>\n    </FormContainerStyled>\n  );\n};\n\nOrderForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { MyContext } from 'components/App';\nimport { useContext } from 'react';\nimport { CartItem } from './CartItem';\nimport { OrderForm } from 'components/OrderForm/OrderForm';\nimport { addOrder } from 'API/api';\nimport { Toaster, toast } from 'react-hot-toast';\nimport {\n  CartListContainerStyled,\n  TotalPriceContainerStyled,\n  TotalPriceLabelStyled,\n  TotalPriceValueStyled,\n  ClearCartStyled,\n} from './CartList.Sstyled';\n\nexport const CartList = () => {\n  const { cart, setCart, setActiveShop } = useContext(MyContext);\n  const getTotalPrice = () => {\n    let totalPrice = 0;\n    cart.forEach(item => {\n      totalPrice += item.product.price * item.quantity;\n    });\n    return totalPrice.toFixed(2);\n  };\n\n  const handleClearClick = () => {\n    setCart([]);\n    setActiveShop('');\n    localStorage.setItem('cart', JSON.stringify([]));\n    localStorage.clear();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const email = event.target.email.value;\n    const phoneNumber = event.target.phoneNumber.value;\n    const address = event.target.address.value;\n\n    const body = {\n      shop: cart[0].shopId,\n      products: cart,\n      email,\n      phoneNumber,\n      address,\n    };\n\n    const data = await addOrder(body);\n    if (!data) {\n      toast.error('Sorry, there was an error');\n      return;\n    }\n    toast.success('Thank you for your order');\n    event.target.reset();\n    setCart([]);\n    setActiveShop('');\n    localStorage.setItem('cart', JSON.stringify([]));\n    localStorage.clear();\n  };\n\n  return (\n    <>\n      <Toaster />\n      <OrderForm handleSubmit={handleSubmit} />\n      <CartListContainerStyled>\n        {cart.length !== 0 &&\n          cart.map(el => <CartItem key={el.productId} product={el} />)}\n      </CartListContainerStyled>\n      <TotalPriceContainerStyled>\n        <TotalPriceLabelStyled>Total Price:</TotalPriceLabelStyled>\n        <TotalPriceValueStyled>{getTotalPrice()}</TotalPriceValueStyled>\n      </TotalPriceContainerStyled>\n      {cart.length > 0 && (\n        <ClearCartStyled onClick={handleClearClick} type=\"button\">\n          Clear cart\n        </ClearCartStyled>\n      )}\n    </>\n  );\n};\n","import { CartList } from 'components/CartList/CartList';\n\nconst Cart = () => {\n  return (\n    <>\n      <CartList />\n    </>\n  );\n};\nexport default Cart;\n"],"names":["CartListContainerStyled","styled","CartItemStyled","CartItemNameStyled","CartItemButtonStyled","CartItemQuantityStyled","CartItemTotalPriceStyled","TotalPriceContainerStyled","TotalPriceLabelStyled","TotalPriceValueStyled","ClearCartStyled","CartItem","product","id","name","price","setCart","useContext","MyContext","type","onClick","prevCart","updatedCart","map","item","quantity","productId","localStorage","setItem","JSON","stringify","handleDecrement","handleIncrement","toFixed","FormContainerStyled","FormLabelStyled","FormInputStyled","FormButtonStyled","props","disabled","OrderForm","handleSubmit","activeShop","onSubmit","htmlFor","pattern","required","CartList","cart","setActiveShop","event","preventDefault","email","target","value","phoneNumber","address","body","shop","shopId","products","addOrder","toast","reset","clear","length","el","totalPrice","forEach","getTotalPrice"],"sourceRoot":""}